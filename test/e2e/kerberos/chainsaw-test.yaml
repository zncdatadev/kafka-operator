apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: kerberos
spec:
  # skip: true
  bindings:
  - name: relam
    value: KUBEDOOP.DEV   # kerberos relam, should be uppercase, see kafk also
  - name: kadminPassword
    value: kubedoopdev
  - name: kadminKeytabSecret
    value: kadmin-keytab
  steps:
  - name: install krb5 kdc
    try:
    - apply:  # create a krb5 deployment and service, both named "krb5"
        file: krb5-install.yaml
    - assert:
        file: krb5-assert.yaml
    - script:
        env:
        - name: RELAM
          value: ($relam)
        - name: NAMESPACE
          value: ($namespace)
        - name: DEPLOYMENT_NAME
          value: krb5
        - name: KADMIN_KEYTAB_SECRET
          value: ($kadminKeytabSecret)
        content: |
          # debug node info
          kubectl get node
          # get pod of deploment by label
          POD_NAME=$(kubectl get pod -n $NAMESPACE -l app=$DEPLOYMENT_NAME -o jsonpath="{.items[0].metadata.name}")

          # check pod exist
          if [ -z "$POD_NAME" ]; then
            echo "pod not found"
            exit 1
          fi

          # get kadmin keytab
          KADMIN_KEYTAB=$(kubectl exec -n $NAMESPACE $POD_NAME -- sh -c "cat /var/kerberos/krb5kdc/kadmin.keytab | base64 -w 0")

          # create secret, name is $KADMIN_KEYTAB_SECRET
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Secret
          metadata:
            name: $KADMIN_KEYTAB_SECRET
            namespace: $NAMESPACE
          data:
            keytab: $KADMIN_KEYTAB
    - assert: # assert kadmin keytab secret
        resource:
          apiVersion: v1
          kind: Secret
          metadata:
            name: ($kadminKeytabSecret)
          data:
            (keytab != ""): true
  - name: install zookeeper cluster
    try:
    - apply:
        file: ../setup/zookeeper.yaml
    - assert:
        file: ../setup/zookeeper-assert.yaml
    cleanup:
    - sleep:
        duration: 120s
    catch:
      - podLogs:
          name: zookeepercluster-sample-0
          container: server
      - describe:
          apiVersion: zookeeper.kubedoop.dev/v1alpha1
          kind: ZookeeperCluster
          name: zookeepercluster-sample
  - name: install kafka
    try:
    - apply:
        file: krb5-secretclass.yaml
    - apply:
        file: kafka.yaml
    - assert:
        file: kafka-assert.yaml
    catch:
    - describe:
        apiVersion: v1
        kind: Pod
        namespace: "*"
    - podLogs:
        selector: app.kubernetes.io/name=kafka-operator
        namespace: kafka-operator-system
    - podLogs:
        selector: app.kubernetes.io/name=zookeepercluster
